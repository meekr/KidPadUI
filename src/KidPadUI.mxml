<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:local="*"
			   xmlns:components="components.*"
			   xmlns:classes="classes.*"
			   width="1000" height="703"
			   skinClass="skins.ApplicationSkin"
			   initialize="application1_initializeHandler(event)"
			   >
	<s:layout>
		<s:BasicLayout/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import classes.UIController;
			
			import events.ChannelChangeEvent;
			import events.UserFailedLoginEvent;
			import events.UserLoggedInEvent;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			[Bindable]
			private var controller:UIController;
			
			protected function application1_initializeHandler(event:FlexEvent):void
			{
				controller = UIController.instance;
				fscommand("loaded");
				
				// handle events
				controller.user.addEventListener("userLoggedIn", user_loggedIn);
				controller.user.addEventListener("userFailedLogin", user_failedLogin);
				
				CONFIG::ON_PC {
					ExternalInterface.addCallback("FL_setDeviceConnection", FL_setDeviceConnection);
				}
			}
			
			private function FL_setDeviceConnection(args:String):void
			{
				controller.deviceDisk.connected = (args=="1");
			}
			
			private function user_loggedIn(event:UserLoggedInEvent):void
			{
				//loginForm.visible = false;
				contentContainer.visible = true;
			}
			
			private function user_failedLogin(event:UserFailedLoginEvent):void
			{
			}
		]]>
	</fx:Script>
	<fx:Style source="css/global.css"/>
	<fx:Declarations>
	</fx:Declarations>
	<s:VGroup width="100%" height="100%">
		<components:TitleBar width="100%" height="27"/>
		<s:HGroup horizontalAlign="center" verticalAlign="middle" width="100%" height="100%">
			<components:LoginForm id="loginForm" width="414" height="212" horizontalCenter="0" verticalCenter="-60" visible="{!UIController.instance.user.loggedIn}" includeInLayout="{!UIController.instance.user.loggedIn}"/>
			<components:ContentContainer id="contentContainer" width="100%" height="100%" visible="{UIController.instance.user.loggedIn}" includeInLayout="{UIController.instance.user.loggedIn}">		
			</components:ContentContainer>
		</s:HGroup>
	</s:VGroup>
</s:Application>