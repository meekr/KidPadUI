<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false"
				xmlns:components="components.*"
				xmlns:classes="classes.*"
				>
	<fx:Script>
		<![CDATA[
			import classes.AppItem;
			import classes.AppItemType;
			import classes.Constants;
			import classes.UIController;
			
			import events.AppItemDeleteEvent;
			import events.AppItemSyncEvent;
			
			import mx.controls.*;
			import mx.events.CloseEvent;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				var item:AppItem = value as AppItem;
				if (item) {
					item.addEventListener(AppItemDeleteEvent.name, appItemDeleteHandler);
					item.addEventListener(AppItemSyncEvent.name, appItemSyncHandler);
					if (item.isDeviceType()) {
						thumbnail.load(item.iconByteArray);
					}
					else {
						thumbnail.source = item.iconUrl;
					}
				}
				else {
					thumbnail.source = null;
				}
			}
			
			protected function appItemDeleteHandler(event:AppItemDeleteEvent):void
			{
				btnDeleteFromDevice.removeEventListener(MouseEvent.CLICK, btnDeleteFromDevice_clickHandler);
				
				btnDeleteFromDevice.enabled = false;
				btnDeleteFromDevice.text = "正在删除中...";
			}
			
			protected function appItemSyncHandler(event:AppItemSyncEvent):void
			{
				btnSync.removeEventListener(MouseEvent.CLICK, btnSync_clickHandler);
				
				btnSync.enabled = false;
				btnSync.text = "正在同步中...";
			}
			
			private function alertEventHandler(event:CloseEvent):void {
				if(event.detail == Alert.YES) {
					(data as AppItem).dispatchEvent(new AppItemDeleteEvent());
				}
			}
			
			protected function btnDeleteFromDevice_clickHandler(event:MouseEvent):void
			{
				var confirmDlg:Object = Alert.show("您确认删除\"" + AppItem(data).name + "\"吗？", "确认", Alert.YES|Alert.NO, null, alertEventHandler, null, Alert.YES); 
			}
			
			private function btnDetail_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(Constants.getProductDetailUrl(data.id)));
			}
			
			protected function btnSync_clickHandler(event:MouseEvent):void
			{
				(data as AppItem).dispatchEvent(new AppItemSyncEvent());
			}
			
			protected function checkbox_changeHandler(event:Event):void
			{
				data.selected = checkbox.selected;
			}
			
		]]>
	</fx:Script>
	<s:HGroup gap="6" width="355" height="100%">
		<s:CheckBox id="checkbox" selected="{data.selected}" visible="{!AppItem(data).isStoreType()}"
					change="checkbox_changeHandler(event)"
					skinClass="skins.MyCheckBoxSkin"/>
		<mx:Image id="thumbnail" width="120" height="120" source="@Embed(source='assets/icon-placeholder.png')"/>
		<s:Spacer width="5"/>
		<s:VGroup width="100%" height="100%">
			<s:Label text="{data.name}" fontSize="15"/>
			<mx:Text htmlText="{data.description}" width="100%"/>
			<s:Spacer height="100%"/>
			<components:KPButton id="btnDeleteFromDevice" text="从设备移除" currentState="selected"
								 visible="{AppItem(data).isDeviceType()}" includeInLayout="{AppItem(data).isDeviceType()}"
								 click="btnDeleteFromDevice_clickHandler(event)"/>
			<components:KPButton id="btnSync" text="同步"
								 visible="{AppItem(data).isPcType()}" includeInLayout="{AppItem(data).isPcType()}"
								 click="btnSync_clickHandler(event)"/>
			<s:HGroup visible="{AppItem(data).isStoreType()}" includeInLayout="{AppItem(data).isStoreType()}">
				<components:KPButton id="btnDetail" text="详情" click="btnDetail_clickHandler(event)"/>
				<components:KPButton text="购买" click="UIController.instance.addAppToDownload(data as AppItem)"/>
			</s:HGroup>
		</s:VGroup>
	</s:HGroup>
</s:ItemRenderer>