<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:components="components.*"
		 creationComplete="group1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import classes.AppItem;
			import classes.Constants;
			import classes.UIController;
			import classes.DataController;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			protected function cateButton_clickHandler(event:MouseEvent):void
			{
				// update visual appearance
				var button:KPButton = event.currentTarget as KPButton;
				button.currentState = "selected";
				for (var i:int=1; i<=3; i++) {
					var id:String = "cate" + i + "Button";
					if (id == button.id) continue;
					var btn:KPButton = this[id];
					btn.currentState = "notSelected";
				}
				
				DataController.instance.getStoreProductList();
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				cate1Button.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Rect width="100%" height="64">
		<s:fill>
			<s:SolidColor color="#f2f2f2"/>
		</s:fill>
	</s:Rect>
	<s:Rect x="0" y="64" width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#ffffff"/>
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" height="100%" gap="0">
		<s:HGroup width="100%" height="40" verticalAlign="middle" paddingLeft="10" paddingRight="10">
			<components:KPButton id="cate1Button" text="图书" click="cateButton_clickHandler(event)" currentState="notSelected"/>
			<components:KPButton id="cate2Button" text="应用" click="cateButton_clickHandler(event)" currentState="notSelected"/>
			<components:KPButton id="cate3Button" text="游戏" click="cateButton_clickHandler(event)" currentState="notSelected"/>
			<s:Spacer width="100%"/>
			<s:Group width="232" height="25">
				<s:Image source="@Embed(source='assets/search-bg.jpg')" width="100%" height="100%"/>
				<components:KPTextInput id="searchBox"
										text="输入关键字查找"
										skinClass="skins.KPTextInputSkin"
										width="187" height="100%"
										backgroundAlpha="0"
										borderWeight="0"/>
				<s:Label x="187" width="45" height="100%" click="trace('search...')"/>
			</s:Group>
		</s:HGroup>
		<mx:HRule width="100%" height="1"/>
		<s:HGroup width="100%" height="20" verticalAlign="middle" paddingLeft="10" paddingRight="10" gap="5">
			<s:Image source="@Embed(source='assets/arrow-left.png')" width="7" height="100%" fillMode="clip" click="trace('previous page')"/>
			<s:Spacer width="5"/>
			<s:Image source="@Embed(source='assets/arrow-right.png')" width="7" height="100%" fillMode="clip" click="trace('next page')"/>
			<s:Spacer width="100%"/>
			<s:Label text="最新"/>
			<s:Label text="最热"/>
			<s:Label text="限时免费"/>
		</s:HGroup>
		<s:Group width="100%" height="100%">
			<s:Label y="20" text="正在努力从网络获取数据..." fontSize="14" horizontalCenter="0"
					 visible="{DataController.instance.retrievingStoreList}" includeInLayout="{DataController.instance.retrievingStoreList}"/>
			<s:List id="list" left="20" right="0" top="5" bottom="0"
					skinClass="skins.MyListSkin"
					itemRenderer="renderers.ThumbnailItemRenderer"
					dataProvider="{DataController.instance.itemsOnStore}"
					visible="{!DataController.instance.retrievingStoreList}">
				<s:layout>
					<s:TileLayout requestedColumnCount="2" paddingTop="20" paddingBottom="20" verticalGap="20" horizontalGap="20"
								  />
				</s:layout>
			</s:List>
		</s:Group>
	</s:VGroup>
</s:Group>