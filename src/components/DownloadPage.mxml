<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:components="components.*"
		 xmlns:classes="classes.*"
		 creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import classes.AppItem;
			import classes.Constants;
			import classes.DataController;
			import classes.UIController;
			import events.AppItemSyncEvent;
			
			import mx.events.FlexEvent;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				DataController.instance.getPcProductList();
				cate1Button.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
			protected function cateButton_clickHandler(event:MouseEvent):void
			{
				// update visual appearance
				var button:KPButton = event.currentTarget as KPButton;
				button.currentState = "selected";
				for (var i:int=1; i<=2; i++) {
					var id:String = "cate" + i + "Button";
					if (id == button.id) continue;
					var btn:KPButton = this[id];
					btn.currentState = "notSelected";
				}
				
				if (button.id == "cate1Button") {
					downloadedList.visible = true;
					downloadingList.visible = false;
				}
				else {
					downloadedList.visible = false;
					downloadingList.visible = true;
				}
			}
			
			private function selectAll():void
			{
				for (var i:int=0; i<DataController.instance.itemsOnPc.length; i++)
				{
					var item:AppItem = DataController.instance.itemsOnPc.getItemAt(i) as AppItem;
					item.selected = true;
				}
			}
			
			private function unselectAll():void
			{
				for (var i:int=0; i<DataController.instance.itemsOnPc.length; i++)
				{
					var item:AppItem = DataController.instance.itemsOnPc.getItemAt(i) as AppItem;
					item.selected = false;
				}
			}
			
			private function syncSelected():void
			{
				var toBeDeleted:Array = new Array();
				for (var i:int=0; i<DataController.instance.itemsOnPc.length; i++)
				{
					var item:AppItem = DataController.instance.itemsOnPc.getItemAt(i) as AppItem;
					if (item.selected) {
						toBeDeleted.push(item);
					}
				}
				
				while (toBeDeleted.length > 0) {
					var ai:AppItem = toBeDeleted[0] as AppItem;
					ai.dispatchEvent(new AppItemSyncEvent());
					toBeDeleted.shift();
				}
			}
			
			private function import2Library():void
			{
				CONFIG::ON_PC {
					ExternalInterface.call("F2C_import2Library", "");
					cate1Button.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Rect width="100%" height="64">
		<s:fill>
			<s:SolidColor color="#f2f2f2"/>
		</s:fill>
	</s:Rect>
	<s:Rect x="0" y="64" width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#ffffff"/>
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" height="100%" gap="0">
		<s:HGroup width="100%" height="40" verticalAlign="middle" paddingLeft="10" paddingRight="10">
			<components:KPButton id="cate1Button" text="已下载" click="cateButton_clickHandler(event)" currentState="notSelected"/>
			<components:KPButton id="cate2Button" text="下载中" click="cateButton_clickHandler(event)" currentState="notSelected"/>
			<s:Spacer width="100%"/>
			<components:KPButton text="导入应用" click="import2Library()"/>
			<!--<s:Group width="200" height="25">
				<s:Image source="@Embed(source='assets/search-bg.jpg')" width="100%" height="100%"/>
				<components:KPTextInput id="searchBox"
										text="输入关键字查找"
										skinClass="skins.KPTextInputSkin"
										width="187" height="100%"
										backgroundAlpha="0"
										borderWeight="0"/>
				<s:Label x="155" width="45" height="100%" click="search()"/>
			</s:Group>-->
		</s:HGroup>
		<mx:HRule width="100%" height="1"/>
		<s:HGroup width="100%" height="20" verticalAlign="middle" paddingLeft="10" paddingRight="10" gap="5">
			<s:Spacer width="100%"/>
			<s:Label text="全选" click="selectAll()"/>
			<s:Label text="全不选" click="unselectAll()"/>
			<s:Label text="同步" click="syncSelected()"/>
		</s:HGroup>
		<s:Group width="100%" height="100%">
			<s:List id="downloadedList" left="20" right="0" top="5" bottom="0"
					skinClass="skins.MyListSkin"
					itemRenderer="renderers.ThumbnailItemRenderer"
					visible="false"
					dataProvider="{DataController.instance.itemsOnPc}">
				<s:layout>
					<s:TileLayout requestedColumnCount="2" paddingTop="20" paddingBottom="20" verticalGap="20" horizontalGap="20"
								  />
				</s:layout>
			</s:List>
			<s:List id="downloadingList" width="100%" height="100%"
					skinClass="skins.MyListSkin"
					itemRenderer="renderers.DownloadListItemRenderer"
					visible="false"
					dataProvider="{DataController.instance.itemsDownloading}">
				<s:layout>
					<s:VerticalLayout gap="0"/>
				</s:layout>
			</s:List>
		</s:Group>
	</s:VGroup>
	<components:KPButton text="{DataController.instance.itemsDownloading.length}" currentState="indicator" x="130" y="6" visible="{DataController.instance.itemsDownloading.length>0}"/>
</s:Group>
